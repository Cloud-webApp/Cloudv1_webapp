name: Build AMI after PR Merge

on:
  push:
    branches:
      - main1

jobs:
  build-ami:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create zip archive from the current directory
        run: |
          touch .env
          echo 'DB_PORT=${{ secrets.DB_PORT }}' >> .env
          echo 'DB_USER=${{ secrets.DB_USER }}' >> .env
          echo 'DB_PASSWORD=${{ secrets.DB_PASSWORD }}' >> .env
          echo 'DB_DATABASE=${{ secrets.DB_DATABASE }}' >> .env
          echo 'DB_HOST=${{ secrets.DB_HOST }}' >> .env
          echo 'CSVPATH=./users.csv' >> .env
          mkdir artifacts
          zip -r artifacts/webapp.zip . -x "*.git*"

      - name: Install Packer
        run: |
          PACKER_VERSION="1.9.4"  
          wget https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip
          unzip packer_${PACKER_VERSION}_linux_amd64.zip
          sudo mv packer /usr/local/bin/
          packer --version

      - name: Initialize Packer
        run: packer init main.pkr.hcl

      - name: Build Custom AMI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: packer build main.pkr.hcl

# name: Build AMI after PR Merge

  # on:
  #   push:
  #     branches:
  #       - main    #branch name change

  # jobs:
  #   build-ami:
  #     runs-on: ubuntu-latest
  #     #   postgres:
  #     #     image: postgres:latest
  #     #     env:
  #     #       POSTGRES_DB: ${{ secrets.DB_DATABASE }}
  #     #       POSTGRES_USER: ${{ secrets.DB_USER }}
  #     #       POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
  #     #       POSTGRES_PORT: ${{ secrets.DB_PORT }}
  #     #       POSTGRES_HOST: ${{ secrets.DB_HOST }}
  #     #     ports:
  #     #       - 5432:5432
  #     #     options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


  #     # steps:
  #     #   - name: Checkout Code
  #     #     uses: actions/checkout@v2

  #     #   - name: "Create env file"
  #     #     run: |
  #     #       touch .env
  #     #       echo PGDATABASE=${{ secrets.DB_DATABASE }} >> .env
  #     #       echo PGUSER=${{ secrets.DB_USER }} >> .env
  #     #       echo PGPASSWORD=${{ secrets.DB_PASSWORD }} >> .env
  #     #       echo PGPORT=${{ secrets.DB_PORT }} >> .env
  #     #       echo PGHOST=${{ secrets.DB_HOST }} >> .env
  #     #       echo "cat .env"
  #     #       cat .env
  #     #       echo "ls -a ."
  #     #       ls -a .
  #     #       echo "ls -a ${{ github.workspace }}"
  #     #       ls -a ${{ github.workspace }}

  

  #     #   - name: Set up Node.js
  #     #     uses: actions/setup-node@v2
  #     #     with:
  #     #       node-version: 18.x

  

  #     #   - name: Install Dependencies
  #     #     run: npm install

  

  #     #   - name: Run Integration Tests
  #     #     run: npm run test

  #       - name: Checkout Repository
  #         uses: actions/checkout@v2

          
  #       - name: Create zip archive from current directory
  #         run: |
  #           mkdir artifacts
  #           zip -r artifacts/webapp.zip . -x "*.git*"

  #       - name: Install Packer
  #         run: |
  #           PACKER_VERSION="1.9.4"  
  #           wget https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip
  #           unzip packer_${PACKER_VERSION}_linux_amd64.zip
  #           sudo mv packer /usr/local/bin/
  #           packer --version


  #       - name: Initialize Packer
  #         run: packer init main.pkr.hcl

  #       - name: Build Custom AMI
  #         env:
  #           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         run: packer build main.pkr.hcl
